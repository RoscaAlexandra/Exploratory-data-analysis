---
title: "Tema5DN"
output: ioslides_presentation
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## R Markdown
This is an R Markdown presentation. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document.
## Slide with Bullets
- Bullet 1
- Bullet 2
- Bullet 3
## Slide with R Output
```{r cars, echo = TRUE}
summary(cars)
```
## Slide with Plot
```{r pressure}
plot(pressure)
```
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
grid.arrange(b1, b2, b3)
data(btw2009, package = "flexclust")
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
data(btw2009, package = "flexclust")
install.packages("flexclust")
data(btw2009, package = "flexclust")
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
grid.arrange(b1, b2, b3)
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
install.packages("flexclust")
data(btw2009, package = "flexclust")
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
data(btw2009, package = "flexclust")
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
install.packages("ggplot2")
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
require(ggplot2)
library(ggplot2)
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
require(ggplot2)
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
grid.arrange(b1, b2, b3)
library(grid)
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
grid.arrange(b1, b2, b3)
install.packages("grid")
install.packages("grid")
install.packages("grid")
require(grid)
require(grid)
data(btw2009, package = "flexclust")
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
grid.arrange(b1, b2, b3)
install.packages("gridExtra")
library("gridExtra")
data(btw2009, package = "flexclust")
btw2009 <- within (btw2009, stateA <- state)
btw2009 <- within (btw2009,
levels(stateA) <- c("BW", "BY", "BE",
"BB", "HB", "HH", "HE", "MV", "NI", "NW",
"RP", "SL", "SN", "ST", "SH", "TH"))
Voters <- with(btw2009, size <- tapply(eligible, stateA, sum))
Bundesland <- rownames(Voters)
btw9s <- data.frame(Bundesland, Voters)
btw9s$EW <- c("West")
btw9s[c("BB", "BE", "MV","SN","ST","TH"), "EW"] <- "East"
ls <- with(btw9s, Bundesland[order(EW, -Voters)])
btw9s <- within(btw9s, State1 <- factor(Bundesland, levels=ls))
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
b2 <- ggplot(btw9s, aes(reorder(Bundesland, -Voters),
Voters/1000000)) + geom_bar(stat="identity") +
xlab("Bundesland") + ylab("Voters (millions)")
b3 <- ggplot(btw9s, aes(State1, Voters/1000000)) +
geom_bar(stat="identity") + xlab("Bundesland") +
ylab("Voters (millions)")
grid.arrange(b1, b2, b3)
library(help = "datasets")
head sleep
hed sleep
head(slep)
head(sleep)
head(euro)
head(VADeaths)
data(VADeaths)
data(VADeaths)
data(VADeaths)
force(VADeaths)
View(VADeaths)
plot(data)
View(VADeaths)
b1 <- ggplot(btw9s, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
plot()
plot(VADeaths, coords(Rural Male, Rural Female) )
plot(VADeaths Rural Male, Rural Female )
plot(data.matrix(1,2))
plot(data.matrix(2))
plot(data)
plot(data)
VADeathRate <- as.data.frame.table(VADeaths)
View(VADeaths)
View(VADeathRate)
urban<-VADeathRate%%select(1)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
urban<-VADeathRate%%select(1)
urban<-VADeathRate%%select(1:3)
View(VADeaths)
View(VADeaths)
View(VADeathRate)
View(VADeathRate)
View(VADeaths)
View(VADeaths)
View(VADeathRate)
View(VADeathRate)
urban<-VADeathRate%%pull(3)
urban<-VADeathRate[,3]
urban<-VADeathRate[,2]
urban<-VADeathRate[,3]
View(VADeaths)
View(VADeaths)
View(VADeathRate)
View(VADeathRate)
urban<-VADeathRate[6:10]
urban<-VADeathRate[6:10,]
View(urban)
View(urban)
View(urban)
View(urban)
UrbanFemeie<-VADeathRate[1:6,]
View(UrbanFemeie)
View(UrbanFemeie)
View(VADeathRate)
View(VADeathRate)
View(urban)
View(urban)
View(VADeathRate)
View(VADeathRate)
View(VADeaths)
View(VADeaths)
View(VADeathRate)
View(VADeathRate)
View(VADeaths)
View(UrbanFemeie)
RuralFemeie<-VADeathRate[6:10,]
RuralFemeie<-VADeathRate[1:6,]
View(RuralFemeie)
View(RuralFemeie)
View(RuralFemeie)
View(RuralFemeie)
RuralFemeie<-VADeathRate[6:10,]
RuralMale<-VADeathRate[1:6,]
View(RuralMale)
View(RuralMale)
uralFemeie<-VADeathRate[6:10,]
RuralMale<-VADeathRate[1:5,]
RuralFemeie<-VADeathRate[6:10,]
RuralMale<-VADeathRate[1:5,]
VADeathRate <- as.data.frame.table(VADeaths)
RuralFemeie<-VADeathRate[6:10,]
RuralMale<-VADeathRate[1:5,]
View(RuralMale)
View(RuralFemeie)
View(VADeathRate)
plot(RuralFemeie[,3], RuralMale[,3])
plot(RuralFemeie)
plot(RuralFemeie)
plot(RuralFemeie)
plot(RuralFemeie[,3])
hist(RuralFemeie)
hist(VADeathRate)
hist(RuralFemeie[,1])
hist(RuralFemeie[,1])
hist(RuralFemeie[,1])
hist(RuralFemeie[,1])
hist(RuralFemeie[,1])
hist(RuralFemeie[,1])
hist(RuralFemeie[,1])
View(VADeathRate)
View(VADeathRate)
Rural<-VADeathRate[1:10]
Rural<-VADeathRate[1:10,]
d<-data.frame(RuralFemeie[,1],RuralFemeie[,3])
View(d)
View(d)
hist(d)
ggplot(d)
ggplot(d)
ggplot(d)
plot(d)
ggplot(d, aes(Bundesland, Voters/1000000)) +
geom_bar(stat="identity") +
ylab("Voters (millions)")
ggplot(VADeaths)+aes(x=Var1, y=Freq)+geom_bar() +facet.wrap(~Var2)
ggplot(VADeaths)+aes(x=Var1, y=Freq)+geom_bar() +facet.wrap(~Var2)
ggplot(VADeathRate)+aes(x=Var1, y=Freq)+geom_bar() +facet.wrap(~Var2)
ggplot(VADeathRate)+aes(x=Var1, y=Freq)+geom_bar() +facet_wrap(~Var2)
ggplot(VADeaths)+aes(x=Var1, y=Freq)+geom_bar() +facet_wrap(~Var2)
setwd("C:/Users/Eduard/Desktop/Model pt proiectul de la curs")
library("gridExtra")
library("ggplot2")
library("vcd")
library("vcdExtra")
library(visdat)
library("purrr")
library(dplyr)
require(lattice)
library("gridExtra")
library("ggplot2")
library("vcd")
library("vcdExtra")
library(visdat)
library("purrr")
library(dplyr)
require(lattice)
library("serialization")
library("gridExtra")
library("ggplot2")
library("vcd")
library("vcdExtra")
library(visdat)
library("purrr")
library(dplyr)
require(lattice)
library("seriation")
library("gridExtra")
library("ggplot2")
library("vcd")
library("vcdExtra")
library(visdat)
library("purrr")
library(dplyr)
require(lattice)
library(seriation)
library("gridExtra")
library("ggplot2")
library("vcd")
library("vcdExtra")
library(visdat)
library("purrr")
library(dplyr)
require(lattice)
install.packages("seriation")
library(seriation)
install.packages("UsingR")
library(UsingR)
data5<-galton
View(data5)
boxplot(data5)
install.packages("seriation")
install.packages("seriation")
install.packages("UsingR")
setwd("~/GitHub/Exploratory-data-analysis")
